## -*- mode: dockerfile; -*-

FROM r

MAINTAINER "Klaus KÃ¤hler Holst" klaus@holst.it

ENV ARMA=9.300.x
ENV MLPACK=mlpack-3.0.4
ENV DMLC=master
ENV BOOST=boost_1_69_0
ARG USE_HDF5=OFF
ENV ENSMALLEN=master

RUN 	cd /tmp; wget https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.bz2 && \
	mkdir -p boost/minimal; tar jxvf ${BOOST}.tar.bz2 --strip-components=1 -C boost && \
	cd boost; ./bootstrap.sh && \
	./b2 tools/bcp -j$(cat /proc/self/status | awk '$1 == "Cpus_allowed_list:" { print $2 }' | tr , '\n' | awk -F'-' '{ if (NF == 2) count += $2 - $1 + 1; else count += 1 } END { print count }') && \
	cd /tmp/boost; \
	dist/bin/bcp build predef serialization math program_options heap spirit minimal  && \
	cd minimal; ./bootstrap.sh && \
	./b2 --prefix=/usr/local --build-type=minimal -j$(cat /proc/self/status | awk '$1 == "Cpus_allowed_list:" { print $2 }' | tr , '\n' | awk -F'-' '{ if (NF == 2) count += $2 - $1 + 1; else count += 1 } END { print count }') && \
	./b2 install &&  cd /tmp; rm -Rf /tmp/*


RUN	apk add --no-cache cmake ninja git && \
	if [ "$USE_HDF5" = "ON" ]; then (apk add --no-cache \
	--repository  http://dl-3.alpinelinux.org/alpine/edge/testing \
	hdf5 hdf5-dev); fi && \
	cd /tmp; git clone https://gitlab.com/conradsnicta/armadillo-code -b ${ARMA} --depth=1 armadillo && cd armadillo; \
	cmake -G Ninja -D DETECT_HDF5=${USE_HDF5} ./ && \
	ninja && ninja install && \
	cd /tmp; git clone https://github.com/mlpack/ensmallen -b ${ENSMALLEN} --depth=1 && cd ensmallen && \
	mkdir build; cd build; cmake .. -G Ninja BUILD_TESTS=OFF && ninja && ninja install && \
 	cd /tmp; wget http://www.mlpack.org/files/${MLPACK}.tar.gz && tar xzf ${MLPACK}.tar.gz && \
  	cd ${MLPACK} && mkdir build && cd build && \
 	cmake -G Ninja -D BUILD_TESTS=OFF -D BUILD_CLI_EXECUTABLES=OFF -D DEBUG=OFF -D PROFILE=OFF ../ && \
	ninja && ninja install && \
	if [ "$USE_HDF5" = "ON" ]; then (apk del --no-cache hdf5-dev); fi && \
	apk del --no-cache cmake ninja git && cd /tmp; rm -Rf * /root/.cache


RUN R -q -e "install.packages(c('RcppEnsmallen'))" \
	&& rm -Rf /tmp/*

# RUN	apk add --no-cache python3 python3-dev && \
# 	python3 -m ensurepip && \
# 	rm -r /usr/lib/python*/ensurepip && \
# 	pip3 install --upgrade pip setuptools && \
# 	if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
# 	if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
# 	pip3 install pandas numpy && \
# 	rm -rf /var/cache/apk/* /root/.cache

 	# git clone https://github.com/dmlc/dmlc-core.git --depth=1 -b ${DMLC_BRANCH} && \
 	# cd dmlc-core; cmake . make && make install && cd /tmp; rm -Rf dmlc-core && \
 	# apk del .build-deps




 












