## -*- mode: dockerfile; -*-
FROM openjdk:8u191-jdk-alpine3.9

MAINTAINER "Klaus KÃ¤hler Holst" klaus@holst.it

ENV ARMA_BRANCH=9.300.x
ENV MLPACK=mlpack-3.0.4
ENV DMLC_BRANCH=master

ENV R_BASE_VERSION 3.5.3
ENV $LD_LIBRARY_PATH:LD_LIBRARY_PATH /usr/local/lib

ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8

ENV BUILD_DEPS \
	perl \
	cairo-dev \
	bzip2-dev \
	curl-dev \
	readline-dev \
	xz-dev \
	zlib-dev \
	libpng-dev \
	openssl-dev \
	libxml2-dev \
	pango-dev \
	cmake \
	ninja \
	openblas-dev \
	ncurses-terminfo ncurses \
	libintl \
	autoconf \
	automake \
	perl \
	cmake \
	boost-dev boost-math boost-serialization boost-python3 \
	boost-unit_test_framework boost-program_options libexecinfo-dev \
	python2 linux-headers
	
ENV PERSISTENT_DEPS \
	ca-certificates \
	pcre-dev \
	libexecinfo-dev \
# 	icu-libs \
	curl \
	make \
	git \
	gcc \
	g++ \
	musl-dev \
	gfortran \
	coreutils \
	bash \
	python3

RUN	apk add --no-cache --virtual .build-deps $BUILD_DEPS && \
	apk add --no-cache --virtual .persistent-deps $PERSISTENT_DEPS && \
         apk add --no-cache \
   	--repository  http://dl-3.alpinelinux.org/alpine/edge/testing \
 	hdf5 hdf5-dev && \
	python3 -m ensurepip && \
	rm -r /usr/lib/python*/ensurepip && \
	pip3 install --upgrade pip setuptools && \
	if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
	if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
	mkdir /tmp/build_r && cd /tmp/build_r \
	&& apk add --no-cache curl \
	&& curl -sSLO https://cran.rstudio.com/src/base/R-${R_BASE_VERSION:0:1}/R-${R_BASE_VERSION}.tar.gz \
	&& tar xf R-${R_BASE_VERSION}.tar.gz && cd R-${R_BASE_VERSION} \
	&& ./configure --build=$CBUILD --host=$CHOST --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --localstatedir=/var \
	--enable-R-shlib \
#	--enable-BLAS-shlib \
	--without-x \
	--with-ICU=no \
	--with-tcltk=no \
	--with-aqua=no \
	--without-recommended-packages \
	--disable-nls \
	--with-jpeglib=no --with-libtiff=no \
	&& make -j $(cat /proc/self/status | awk '$1 == "Cpus_allowed_list:" { print $2 }' | tr , '\n' | awk -F'-' '{ if (NF == 2) count += $2 - $1 + 1; else count += 1 } END { print count }') \
	&& make install && \
	echo 'options("repos"="https://cran.rstudio.com")' >> /usr/lib/R/etc/Rprofile.site && \
	echo 'CXXFLAGS  += -D__MUSL__' >> /usr/lib/R/etc/Makeconf && \
	echo 'CXX1XFLAGS  += -D__MUSL__' >> /usr/lib/R/etc/Makeconf && \
	echo 'CXX11FLAGS  += -D__MUSL__' >> /usr/lib/R/etc/Makeconf && \
	cd src/nmath/standalone && \
	make && \
	make install && \
	rm -rf /tmp/build_r && \
	rm -r /root/.cache && \
  	cd /tmp; git clone http://gitlab.com/conradsnicta/armadillo-code -b ${ARMA_BRANCH} --depth=1 armadillo && \
  	cd armadillo; cmake . && make && make install && cd /tmp; rm -Rf armadillo && \
 	wget http://www.mlpack.org/files/${MLPACK}.tar.gz && tar xzf ${MLPACK}.tar.gz && rm ${MLPACK}.tar.gz && \
 	cd ${MLPACK} && mkdir build && cd build && \
 	cmake -D BUILD_TESTS=OFF -D BUILD_CLI_EXECUTABLES=OFF -D DEBUG=OFF -D PROFILE=OFF ../ && \
 	make && make install && make clean && cd /tmp; rm -Rf ${MLPACK} && \
 	git clone https://github.com/dmlc/dmlc-core.git --depth=1 -b ${DMLC_BRANCH} && \
 	cd dmlc-core; cmake . make && make install && cd /tmp; rm -Rf dmlc-core && \
	apk del --no-cache .build-deps && apk del --no-cache hdf5-dev && \
	rm -rf /var/cache/apk/* 


# RUN R -q -e "install.packages(c( \
# 'codetools', 'Matrix', 'MASS', 'survival', 'mgcv'  \
# ), repos = 'https://cloud.r-project.org/')" && rm -Rf /tmp/*
# # 'foreign', \
# 'boot', 'cluster', 'rpart', 'KernSmooth', 'MASS', 'nlme', 'mgcv', 'survival',  \
# 'randomForest', 'glmnet', 'quantreg', 'mets', 'DEoptim', 'xts' \
# ), repos = 'https://cloud.r-project.org/')" && rm -Rf /tmp/*


VOLUME /data
WORKDIR /data

CMD R --no-save
